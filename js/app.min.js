/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nlet dataBase = {\r\n    'BB140': '',\r\n    'BB170': '',\r\n    'BB160': ''\r\n};\r\n\r\nlet searchInput = document.querySelector('.search__input'),\r\n    searchBtn = document.querySelector('.search__btn'),\r\n    numOfrec = document.querySelector('#actualRec'),\r\n    savePerValues = document.querySelector('.btn--persent'),\r\n    allPercentInput = document.querySelectorAll('.persent__input'),\r\n    allCheckRadio = document.querySelectorAll('.check__radio'),\r\n    calcBtn = document.querySelector('.calc-btn'),\r\n    errorMessage = document.querySelector('.error-message'),\r\n\r\n    scoreBtn = document.querySelector('.score__btn'),\r\n    scoreInput = document.querySelector('.score__input'),\r\n\r\n    countComponent = 0;\r\n\r\nsavePerValues.addEventListener('click', saveValues);\r\n\r\nfunction saveValues() {\r\n    document.querySelectorAll('.resuslt__title').forEach(e => {\r\n        e.classList.remove('show');\r\n    })\r\n    document.querySelector('.score').classList.remove('show');\r\n    clearScore();\r\n\r\n    allCheckRadio.forEach(e => {\r\n        e.checked = false;\r\n    })\r\n\r\n    let checkSum = 0;\r\n\r\n    for (let item of allPercentInput) {\r\n\r\n        checkSum += +item.value;\r\n        let currentItemId = item.id,\r\n            currentItemData = item.getAttribute('data-check'),\r\n            currentIcon = document.getElementById(currentItemData);\r\n\r\n        if (checkSum > 100) {\r\n            item.value = '';\r\n            currentIcon.style.opacity = '0';\r\n            dataBase[currentItemId] = '0';\r\n            document.getElementById(`radio-${currentItemId}`).disabled = true;\r\n            alert('Suma wszystkich składników powinna być w zakresie od 0 do 100%');\r\n            break;\r\n        }\r\n\r\n        if (item.value <= 0) {\r\n            item.value = '';\r\n            currentIcon.style.opacity = '0';\r\n            dataBase[currentItemId] = '0';\r\n            document.getElementById(`radio-${currentItemId}`).disabled = true;\r\n\r\n        } else {\r\n\r\n            if (item.value) {\r\n                currentIcon.style.opacity = '1';\r\n                dataBase[currentItemId] = item.value;\r\n                document.getElementById(`radio-${currentItemId}`).disabled = false;\r\n            } else {\r\n                currentIcon.style.opacity = '0';\r\n                dataBase[currentItemId] = '0';\r\n                document.getElementById(`radio-${currentItemId}`).disabled = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    showAmount(dataBase);\r\n}\r\n\r\n\r\nfunction showAmount(percent) {\r\n\r\n    let minBB140,\r\n        maxBB140,\r\n        minBB170,\r\n        maxBB170,\r\n        minBB160,\r\n        maxBB160;\r\n\r\n    if (percent.BB140) {\r\n        minBB140 = Math.ceil((270 * percent.BB140) / 100);\r\n        maxBB140 = Math.ceil((450 * percent.BB140) / 100);\r\n\r\n        document.getElementById('minBB140').innerHTML = minBB140;\r\n        document.getElementById('maxBB140').innerHTML = maxBB140;\r\n    }\r\n    if (percent.BB170) {\r\n        minBB170 = Math.ceil((270 * percent.BB170) / 100);\r\n        maxBB170 = Math.ceil((450 * percent.BB170) / 100);\r\n\r\n        document.getElementById('minBB170').innerHTML = minBB170;\r\n        document.getElementById('maxBB170').innerHTML = maxBB170;\r\n    }\r\n    if (percent.BB160) {\r\n        minBB160 = Math.ceil((270 * percent.BB160) / 100);\r\n        maxBB160 = Math.ceil((450 * percent.BB160) / 100);\r\n\r\n        document.getElementById('minBB160').innerHTML = minBB160;\r\n        document.getElementById('maxBB160').innerHTML = maxBB160;\r\n    }\r\n\r\n    scoreBtn.addEventListener('click', () => {\r\n        let min;\r\n\r\n        for (let item of allCheckRadio) {\r\n            if (item.checked === true) {\r\n                let currentCheck = item.getAttribute('data-value');\r\n                min = Math.ceil((270 * dataBase[currentCheck]) / 100);\r\n            }\r\n        }\r\n\r\n        if (scoreInput.value > 50000) {\r\n            clearScore();\r\n        }\r\n\r\n        else if (scoreInput.value < min) {\r\n            clearScore();\r\n            errorMessage.style.opacity = '1';\r\n\r\n        }\r\n\r\n\r\n        else {\r\n            countComponent = scoreInput.value;\r\n            document.querySelector('.actual-score').innerHTML = `${countComponent} kg`;\r\n            errorMessage.style.opacity = '0';\r\n        }\r\n\r\n        countComponent !== 0 ? calcBtn.disabled = false : calcBtn.disabled = true;\r\n    });\r\n\r\n    calcBtn.addEventListener('click', calcAmount);\r\n\r\n    function calcAmount() {\r\n\r\n        for (let item of allCheckRadio) {\r\n\r\n            if (item.checked == true) {\r\n                let currentCheck = item.getAttribute('data-value'),\r\n                    basicValue = (410 * dataBase[currentCheck] / 100),\r\n                    min = (270 * dataBase[currentCheck] / 100),\r\n                    max = (450 * dataBase[currentCheck] / 100),\r\n\r\n                    basicPortions = Math.floor(countComponent / basicValue),\r\n                    rest = countComponent - (basicPortions * basicValue);\r\n\r\n                calcAll(min, max, basicValue, basicPortions, rest);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction calcAll(min, max, basicValue, basicPortions, rest) {\r\n\r\n    // console.log('min: ' + min);\r\n    // console.log('max: ' + max);\r\n    // console.log('basikValue: ' + basicValue);\r\n    // console.log(' ');\r\n    // console.log('bV: ' + (410 * dataBase['BB140']) / 100);\r\n    // console.log('newMin: ' + (270 * dataBase['BB140']) / 100);\r\n    // console.log('newMax: ' + (450 * dataBase['BB140']) / 100);\r\n\r\n    let i = 1;\r\n\r\n    if (countComponent >= min && countComponent < max) {\r\n        let newPortions = Math.floor((countComponent * 410) / basicValue);\r\n\r\n        showResult(i, 0, newPortions, i, 0);\r\n    }\r\n\r\n\r\n    else if (countComponent >= max && (countComponent / 2) < min) {\r\n\r\n        rest = Math.floor(countComponent - max);\r\n\r\n        let newPortions = 450;\r\n\r\n        showResult(1, 0, newPortions, 1, rest);\r\n    }\r\n\r\n    else if (countComponent >= max && (countComponent / min) >= 2 && basicPortions < 2) {\r\n        let newRest = countComponent / 2;\r\n        let newPortions = Math.ceil((newRest * 410) / basicValue);\r\n\r\n        showResult(2, 0, newPortions, 2, 0);\r\n    }\r\n\r\n    else {\r\n\r\n        if (rest < min) {\r\n\r\n            do {\r\n                if (rest >= min && rest / i >= min) {\r\n                    break;\r\n                } else {\r\n                    basicPortions -= 1;\r\n                    rest += basicValue;\r\n                    i++\r\n                }\r\n\r\n            } while (i < 5);\r\n\r\n        }\r\n\r\n        let newRest = rest / i,\r\n            newPortions = Math.floor((newRest * 410) / basicValue),\r\n            basicResult = basicPortions + i;\r\n\r\n        showResult(basicResult, basicPortions, newPortions, i, 0);\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction showResult(basicResult, basicPortions, portionsValue, portionsCount, restCount) {\r\n\r\n    document.querySelector('.basic-result').innerHTML = `${basicResult} szt.`;\r\n    document.querySelector('.basic-portions').innerHTML = `${basicPortions} szt.`\r\n    document.querySelector('.portions-value').innerHTML = `${portionsValue} kg`\r\n    document.querySelector('.portions-count').innerHTML = `${portionsCount} szt.`\r\n    document.querySelector('.rest__count').innerHTML = `${restCount} kg`\r\n\r\n    document.querySelectorAll('.resuslt__title').forEach(e => {\r\n        e.classList.add('show');\r\n    })\r\n\r\n    if (basicPortions === 0) document.querySelector('.optionally').classList.remove('show');\r\n    if (restCount === 0) document.querySelector('.rest').classList.remove('show');\r\n}\r\n\r\nallCheckRadio.forEach(item => {\r\n    item.addEventListener('change', (event) => {\r\n        document.querySelector('.score').classList.add('show');\r\n        let currentRadio = event.currentTarget.id;\r\n        clearRadio(currentRadio);\r\n        clearScore();\r\n    })\r\n});\r\n\r\nfunction clearRadio(item) {\r\n    allCheckRadio.forEach(e => {\r\n        e.checked = false;\r\n    })\r\n    document.getElementById(item).checked = true;\r\n}\r\n\r\nfunction clearScore() {\r\n    document.querySelector('.actual-score').innerHTML = '0';\r\n    document.querySelectorAll('.resuslt__title').forEach(e => {\r\n        e.classList.remove('show');\r\n    })\r\n    calcBtn.disabled = true;\r\n    scoreInput.value = '';\r\n    countComponent = 0;\r\n}\n\n//# sourceURL=webpack://gulpsrc/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;